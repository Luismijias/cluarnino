Validating found git in: git
Using git 2.25.1 from git
Opening repository for path='/home/luis-mijias/netuno' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git rev-parse --git-dir
Open repository: /home/luis-mijias/netuno/apps/cluarnino
> git status -z -u
Opening repository for path='/home/luis-mijias/netuno/.DS_Store' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/.checksum.json' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/LICENSE' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/README.md' failed; ex=Error: spawn ENOTDIR
> git symbolic-ref --short HEAD
Opening repository for path='/home/luis-mijias/netuno/User' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
Opening repository for path='/home/luis-mijias/netuno/apps' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
Opening repository for path='/home/luis-mijias/netuno/bin-unix' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git config --get commit.template
Opening repository for path='/home/luis-mijias/netuno/bin-win' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/luis-mijias/netuno/coder.json' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/config.js' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/extensions' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/luis-mijias/netuno/graalvm' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/luis-mijias/netuno/install-stable' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/install-stable.bat' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/install-stable.sh' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/install-testing' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/install-testing.bat' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/install-testing.sh' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/logs' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/luis-mijias/netuno/machineid' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/netuno' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/netuno.bat' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/netuno.jar' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/netuno.sh' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/ore' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/luis-mijias/netuno/web' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git check-ignore -v -z --stdin
> git show --textconv :website/public/sitemap.xml
> git ls-files --stage -- /home/luis-mijias/netuno/apps/cluarnino/website/public/sitemap.xml
> git log --format=%H%n%aN%n%aE%n%at%n%ct%n%P%n%B -z -n21 -- /home/luis-mijias/netuno/apps/cluarnino/website/public/sitemap.xml
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u
> git symbolic-ref --short HEAD
> git for-each-ref --format=%(refname)%00%(upstream:short)%00%(objectname)%00%(upstream:track) refs/heads/master refs/remotes/master
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
